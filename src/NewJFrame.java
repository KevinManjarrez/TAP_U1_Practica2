
import java.io.File;
import javax.swing.*;
import static javax.swing.JOptionPane.showMessageDialog;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Kevin Manjarrez
 */
public class NewJFrame extends javax.swing.JFrame {
    JFileChooser fc = new JFileChooser();
    JFileChooser seleccionado = new JFileChooser();
    File archivo;
    byte[] bytesImg;
    Gestion gestion = new Gestion();
    File fichero;
    /**
     * Creates new form NewJFrame
     */
    public NewJFrame() {
        initComponents();
        this.setLocationRelativeTo(null);
       
    }
        
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        panelTexto = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jEditorPane = new javax.swing.JEditorPane();
        panelImagen = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        lblImagen = new javax.swing.JLabel();
        jMenuBar2 = new javax.swing.JMenuBar();
        mnGuardar = new javax.swing.JMenu();
        itmGuardarTexto = new javax.swing.JMenuItem();
        itmGuadarImagen = new javax.swing.JMenuItem();
        mnAbrir = new javax.swing.JMenu();
        itmAbrirArchivo = new javax.swing.JMenuItem();
        jMenu1 = new javax.swing.JMenu();
        itmBorrarTexto = new javax.swing.JMenuItem();
        itmBorrarImagen = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jScrollPane3.setViewportView(jEditorPane);

        javax.swing.GroupLayout panelTextoLayout = new javax.swing.GroupLayout(panelTexto);
        panelTexto.setLayout(panelTextoLayout);
        panelTextoLayout.setHorizontalGroup(
            panelTextoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelTextoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 478, Short.MAX_VALUE)
                .addContainerGap())
        );
        panelTextoLayout.setVerticalGroup(
            panelTextoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelTextoLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(33, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Texto", panelTexto);

        jScrollPane2.setViewportView(lblImagen);

        javax.swing.GroupLayout panelImagenLayout = new javax.swing.GroupLayout(panelImagen);
        panelImagen.setLayout(panelImagenLayout);
        panelImagenLayout.setHorizontalGroup(
            panelImagenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelImagenLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 478, Short.MAX_VALUE)
                .addContainerGap())
        );
        panelImagenLayout.setVerticalGroup(
            panelImagenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelImagenLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(41, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Imagen", panelImagen);

        mnGuardar.setText("Guardar");

        itmGuardarTexto.setText("Guardar texto");
        itmGuardarTexto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itmGuardarTextoActionPerformed(evt);
            }
        });
        mnGuardar.add(itmGuardarTexto);

        itmGuadarImagen.setText("Guardar imagen");
        itmGuadarImagen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itmGuadarImagenActionPerformed(evt);
            }
        });
        mnGuardar.add(itmGuadarImagen);

        jMenuBar2.add(mnGuardar);

        mnAbrir.setText("Abrir");

        itmAbrirArchivo.setText("Abrir archivo");
        itmAbrirArchivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itmAbrirArchivoActionPerformed(evt);
            }
        });
        mnAbrir.add(itmAbrirArchivo);

        jMenuBar2.add(mnAbrir);

        jMenu1.setText("Borrar");

        itmBorrarTexto.setText("Borrar texto");
        itmBorrarTexto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itmBorrarTextoActionPerformed(evt);
            }
        });
        jMenu1.add(itmBorrarTexto);

        itmBorrarImagen.setText("Borra imagen");
        itmBorrarImagen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itmBorrarImagenActionPerformed(evt);
            }
        });
        jMenu1.add(itmBorrarImagen);

        jMenuBar2.add(jMenu1);

        setJMenuBar(jMenuBar2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void itmGuardarTextoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itmGuardarTextoActionPerformed
      
         if(seleccionado.showDialog(null, "Guardar texto") == JFileChooser.APPROVE_OPTION){
            archivo = seleccionado.getSelectedFile();
            if(archivo.getName().endsWith("txt")){
                String contenido = jEditorPane.getText();
                String respuesta = gestion.guardarTexto(archivo, contenido);
                if(respuesta!=null){
                    JOptionPane.showMessageDialog(null, respuesta);
                    jEditorPane.setText("");
                }else{
                    JOptionPane.showMessageDialog(null, "Error al guardar texto.");
                }
            }else{
                JOptionPane.showMessageDialog(null, "El texto se debe guardar en un formato de texto.");
            }
        }
  
    }//GEN-LAST:event_itmGuardarTextoActionPerformed

    private void itmGuadarImagenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itmGuadarImagenActionPerformed
       if(seleccionado.showDialog(null, "Guardar imagen") == JFileChooser.APPROVE_OPTION){
            archivo = seleccionado.getSelectedFile();
            if(archivo.getName().endsWith("jpg")||archivo.getName().endsWith("png")||archivo.getName().endsWith("gif")){
                String respuesta = gestion.guardarImagen(archivo, bytesImg);
                if(respuesta!=null){
                    JOptionPane.showMessageDialog(null, respuesta);
                }else{
                    JOptionPane.showMessageDialog(null, "Error al guardar imagen.");
                }
            }else{
                JOptionPane.showMessageDialog(null, "La imagen se debe guardar en formato de imagen.");
            }
        }
    }//GEN-LAST:event_itmGuadarImagenActionPerformed

    private void itmAbrirArchivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itmAbrirArchivoActionPerformed
        if(seleccionado.showDialog(null, "Abrir archivo") == JFileChooser.APPROVE_OPTION){
            archivo = seleccionado.getSelectedFile();
            if(archivo.canRead()){
                if(archivo.getName().endsWith("txt")){
                    String contenido = gestion.abrirTexto(archivo);
                    jEditorPane.setText(contenido);
                }else{
                    if(archivo.getName().endsWith("jpg")||archivo.getName().endsWith("png")||archivo.getName().endsWith("gif")||archivo.getName().endsWith("jpeg")){
                        bytesImg = gestion.abrirImagen(archivo);
                        lblImagen.setIcon(new ImageIcon(bytesImg));
                    }else{
                        JOptionPane.showMessageDialog(null, "Por favor seleccione un archivo de texto o de imagen.");
                    }
                }
            }
        }
    }//GEN-LAST:event_itmAbrirArchivoActionPerformed

    private void itmBorrarTextoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itmBorrarTextoActionPerformed
        jEditorPane.setText("");
        showMessageDialog(null, "Se ha borrado el texto exitosamente");
    }//GEN-LAST:event_itmBorrarTextoActionPerformed

    private void itmBorrarImagenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itmBorrarImagenActionPerformed
        lblImagen.setIcon(null);
        showMessageDialog(null, "Se ha borrado la imagen exitosamente");

    }//GEN-LAST:event_itmBorrarImagenActionPerformed
    /*public void abrirImagen(){
    int resultado;
    FileNameExtensionFilter filtro = new FileNameExtensionFilter("JPG", "PNG", "JPEG", "GIF");
    fc.setFileFilter(filtro);
    resultado = fc.showOpenDialog(null);
    if(JFileChooser.APPROVE_OPTION == resultado){
    fichero= fc.getSelectedFile();
    try{
    ImageIcon icon = new ImageIcon(fichero.toString());
    Icon icono = new ImageIcon(icon.getImage().getScaledInstance(lblImagen.getWidth(), lblImagen.getHeight(), Image.SCALE_DEFAULT));
    lblImagen.setIcon(icono);
    }catch(Exception ex){
    showMessageDialog(null, "Error al cargar la imagen." + ex);
    }//catch;
    }//if.
    }//abrirImagen.*/
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem itmAbrirArchivo;
    private javax.swing.JMenuItem itmBorrarImagen;
    private javax.swing.JMenuItem itmBorrarTexto;
    private javax.swing.JMenuItem itmGuadarImagen;
    private javax.swing.JMenuItem itmGuardarTexto;
    private javax.swing.JEditorPane jEditorPane;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel lblImagen;
    private javax.swing.JMenu mnAbrir;
    private javax.swing.JMenu mnGuardar;
    private javax.swing.JPanel panelImagen;
    private javax.swing.JPanel panelTexto;
    // End of variables declaration//GEN-END:variables
}
